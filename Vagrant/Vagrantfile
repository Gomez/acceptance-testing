# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant::Config.run do |config|
  default_chef_json = {
    :mysql =>  {
      :server_root_password => "iloverandompasswordsbutthiswilldo",
      :server_repl_password => "iloverandompasswordsbutthiswilldo",
      :server_debian_password => "iloverandompasswordsbutthiswilldo"
    },
    :postgresql => {
      :password => {
        :postgres => "iloverandompasswordsbutthiswilldo"
      }
    }
  }

  # base box and URL where to get it if not present
  config.vm.box = "precise32"

  # config for the apache box
  config.vm.define "master_on_apache_with_sqlite" do |app|
    app.vm.network :hostonly, "33.33.33.10"
    app.vm.host_name = "apache01.local"
    app.vm.provision :chef_solo do |chef|
      # define our setup
      chef.json = default_chef_json.merge( {} )

      # let the recipe do all the rest
      chef.add_recipe "owncloud"
    end
  end

  config.vm.define "master_on_apache_with_mysql" do |app|
    app.vm.network :hostonly, "33.33.33.11"
    app.vm.host_name = "apache02.local"
    app.vm.provision :chef_solo do |chef|
      # define our setup
      chef.json = default_chef_json.merge( {
        :owncloud => {
          :config => {
            :dbtype => "mysql"
          }
        }
      } )

      # let the recipe do all the rest
      chef.add_recipe "owncloud"
    end
  end

  config.vm.define "master_on_apache_with_postgresql" do |app|
    app.vm.network :hostonly, "33.33.33.12"
    app.vm.host_name = "apache03.local"
    app.vm.provision :chef_solo do |chef|
      # define our setup
      chef.json = default_chef_json.merge( {
        :owncloud => {
          :config => {
            :dbtype => "pgsql"
          }
        }
      } )

      # let the recipe do all the rest
      chef.add_recipe "owncloud"
    end
  end

#  # config for the lighttpd box
#  config.vm.define "master_on_lighttpd" do |db|
#    db.vm.network :hostonly, "33.33.34.10"
#    db.vm.host_name = "lighttpd01.local"
#    db.vm.provision :puppet do |puppet|
#      puppet.manifests_path = "manifests"
#      puppet.manifest_file = "master_on_lighttpd"
#    end
#  end

end
